version: '3'
services:

  # Service for the AllegroGraph
  allegro:
    build: ./components/AllegroGraph/
    restart: on-failure
    expose:
      - "10035"
    command: ["init_all"]

  # Service for the redis queue
  redis:
    image: redis
    expose:
      - "6379"

  # Service for the INNUENDO frontend. Requires the config files for the
  # application and mapping of the fastq files
  frontend:
    build: ./components/Frontend/
    privileged: true
    restart: on-failure
    volumes:
      - static-content:/Frontend/report-nf/
      - ./configs/app/config_frontend.py:/Frontend/INNUENDO_REST_API/config.py
      - ./configs/app/config_reports.js:/Frontend/report-nf/config.js
      - user_data:/INNUENDO
      - ./inputs/fastq:/INNUENDO/ftp/files
      - ./inputs/classifications:/INNUENDO/inputs/classifications
      - ./inputs/core_lists:/INNUENDO/inputs/core_lists
      - ./inputs/indexes:/INNUENDO/inputs/indexes
      - ./inputs/legacy_metadata:/INNUENDO/inputs/legacy_metadata
      - ./inputs/legacy_profiles:/INNUENDO/inputs/legacy_profiles
      - singularity_cache:/mnt/singularity_cache
      - /Users/bgoncalves/sandbox/repositories/INNUENDO_REST_API/app/static/css:/Frontend/INNUENDO_REST_API/app/static/css
      - /Users/bgoncalves/sandbox/repositories/INNUENDO_REST_API/app/models:/Frontend/INNUENDO_REST_API/app/models
      - /Users/bgoncalves/sandbox/repositories/INNUENDO_REST_API/app/static/controllers:/Frontend/INNUENDO_REST_API/app/static/controllers
      - /Users/bgoncalves/sandbox/repositories/INNUENDO_REST_API/app/static/img:/Frontend/INNUENDO_REST_API/app/static/img
      - /Users/bgoncalves/sandbox/repositories/INNUENDO_REST_API/app/templates:/Frontend/INNUENDO_REST_API/app/templates
      - /Users/bgoncalves/sandbox/repositories/INNUENDO_REST_API/app/static/fonts:/Frontend/INNUENDO_REST_API/app/static/fonts
      - /Users/bgoncalves/sandbox/repositories/INNUENDO_REST_API/app/static/ico:/Frontend/INNUENDO_REST_API/app/static/ico
      - /Users/bgoncalves/sandbox/repositories/INNUENDO_REST_API/app/static/html_components:/Frontend/INNUENDO_REST_API/app/static/html_components
      - /Users/bgoncalves/sandbox/repositories/INNUENDO_REST_API/app/resources/postgres:/Frontend/INNUENDO_REST_API/app/resources/postgres
      - /Users/bgoncalves/sandbox/repositories/INNUENDO_REST_API/app/resources/jobs:/Frontend/INNUENDO_REST_API/app/resources/jobs
      - /Users/bgoncalves/sandbox/repositories/INNUENDO_REST_API/app/resources/phyloviz:/Frontend/INNUENDO_REST_API/app/resources/phyloviz
      - /Users/bgoncalves/sandbox/repositories/INNUENDO_REST_API/app/api.py:/Frontend/INNUENDO_REST_API/app/api.py
      - /Users/bgoncalves/sandbox/repositories/INNUENDO_REST_API/mlst_profiles_to_db.py:/Frontend/INNUENDO_REST_API/mlst_profiles_to_db.py
      - /Users/bgoncalves/sandbox/repositories/INNUENDO_REST_API/app/views.py:/Frontend/INNUENDO_REST_API/app/views.py
      - /Users/bgoncalves/sandbox/repositories/INNUENDO_REST_API/job_processing/database_functions.py:/Frontend/INNUENDO_REST_API/job_processing/database_functions.py
      - /Users/bgoncalves/sandbox/repositories/INNUENDO_REST_API/job_processing/phyloviz_functions.py:/Frontend/INNUENDO_REST_API/job_processing/phyloviz_functions.py
      - /Users/bgoncalves/sandbox/repositories/INNUENDO_REST_API/job_processing/fast_mlst_functions.py:/Frontend/INNUENDO_REST_API/job_processing/fast_mlst_functions.py
    ports:
      - "5000:5000"
    depends_on:
      - "allegro"
      - "db_innuendo"
      - "db_mlst"
      - "web"
    command: ["build_allegro", "build_db", "build_metadata_indexes", "init_app"]

  # DB for the INNUENDO application.
  db_innuendo:
    build: ./components/Postgres
    restart: always
    environment:
      POSTGRES_USER: "innuendo"
      POSTGRES_PASSWORD: "innuendo_database"
      POSTGRES_DB: "innuendo"
    volumes:
      - ./configs/dbs/alembic_drop.sql:/docker-entrypoint-initdb.d/1-schema.sql

  # DB for the INNUENDO wgMLST profiles.
  db_mlst:
    build: ./components/Postgres
    restart: always
    environment:
      POSTGRES_USER: "innuendo"
      POSTGRES_PASSWORD: "innuendo_database"
      POSTGRES_DB: "mlst_database"
    volumes:
      - ./configs/dbs/alembic_drop.sql:/docker-entrypoint-initdb.d/1-schema.sql

  # DB for PHYLOViZ Online.
  db_phyloviz:
    build: ./components/Postgres
    restart: always
    environment:
      POSTGRES_USER: "phyloviz"
      POSTGRES_PASSWORD: "phyloviz"
      POSTGRES_DB: "phyloviz"
    volumes:
      - ./configs/dbs/init.sql:/docker-entrypoint-initdb.d/1-schema.sql

  # Service for PHYLOViZ Online application
  phyloviz:
    build: ./components/PHYLOViZ
    restart: on-failure
    volumes:
      - ./configs/app/phyloviz_config.js:/PHYLOVIZ/Online-PhyloViZ/config.js
    expose:
      - "3000"
    depends_on:
      - "db_phyloviz"
      - "redis"
      - "web"
    command: ["init_all"]

  # Service for the INNUENDO frontend. Requires the config files for the
  # application and mapping of the fastq files. It also requires the slurm
  # conf files.
  controller:
    image: innuendodocker_controller:latest
    command: ["slurmctld", "get_schemas"]
    container_name: slurmctld
    hostname: slurmctld
    privileged: true
    tty: true
    #restart: on-failure
    volumes:
      - etc_munge:/etc/munge
      - etc_slurm:/etc/slurm
      - slurm_jobdir:/data
      - var_log_slurm:/var/log/slurm
      - ./configs/app/config_process.py:/Controller/INNUENDO_PROCESS_CONTROLLER/config.py
      - ./configs/nextflow/nextflow.config:/Controller/assemblerflow/assemblerflow/nextflow.config
      - user_data:/INNUENDO
      - ./inputs/fastq:/INNUENDO/ftp/files
      - ./inputs/schemas:/INNUENDO/inputs/schemas
      - ./inputs/prodigal_training_files:/INNUENDO/inputs/prodigal_training_files
      - ./inputs/core_lists:/INNUENDO/inputs/core_lists
      - ./inputs/serotyping_files:/INNUENDO/inputs/serotyping_files
      - singularity_cache:/mnt/singularity_cache
      - /Users/bgoncalves/sandbox/repositories/INNUENDO_PROCESS_CONTROLLER/job_processing/queue_processor.py:/Controller/INNUENDO_PROCESS_CONTROLLER/job_processing/queue_processor.py
      - /Users/bgoncalves/sandbox/repositories/INNUENDO_PROCESS_CONTROLLER/job_processing/bash_scripts/nextflow_executor.sh:/Controller/INNUENDO_PROCESS_CONTROLLER/job_processing/bash_scripts/nextflow_executor.sh
    expose:
      - "6817"
      - "5001"
    depends_on:
      - "slurmdbd"
      - "allegro"
      - "frontend"
      - "web"


  # service with mysql database for slurm accounting
  mysql:
    image: mysql:5.7
    hostname: mysql
    container_name: mysql
    privileged: true
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: "yes"
      MYSQL_DATABASE: slurm_acct_db
      MYSQL_USER: slurm
      MYSQL_PASSWORD: password
    volumes:
      - var_lib_mysql:/var/lib/mysql

  # service for the the SLURM dbd.
  slurmdbd:
    image: innuendodocker_controller
    command: ["slurmdbd"]
    container_name: slurmdbd
    hostname: slurmdbd
    privileged: true
    volumes:
      - etc_munge:/etc/munge
      - etc_slurm:/etc/slurm
      - var_log_slurm:/var/log/slurm
      - singularity_cache:/mnt/singularity_cache
    expose:
      - "6819"
    depends_on:
      - "mysql"

  # service for slurm computing node 1
  c1:
    image: innuendodocker_controller:latest
    command: ["slurmd"]
    hostname: c1
    container_name: c1
    privileged: true
    volumes:
      - etc_munge:/etc/munge
      - etc_slurm:/etc/slurm
      - slurm_jobdir:/data
      - var_log_slurm:/var/log/slurm
      - singularity_cache:/mnt/singularity_cache
      - user_data:/INNUENDO
      - ./inputs/fastq:/INNUENDO/ftp/files
      - ./inputs/schemas:/INNUENDO/inputs/schemas
      - ./inputs/prodigal_training_files:/INNUENDO/inputs/prodigal_training_files
      - ./inputs/core_lists:/INNUENDO/inputs/core_lists
      - ./inputs/serotyping_files:/INNUENDO/inputs/serotyping_files
    expose:
      - "6818"
    depends_on:
      - "controller"

  # service for slurm computing node 2
  c2:
    image: innuendodocker_controller:latest
    command: ["slurmd"]
    hostname: c2
    container_name: c2
    privileged: true
    volumes:
      - etc_munge:/etc/munge
      - etc_slurm:/etc/slurm
      - slurm_jobdir:/data
      - var_log_slurm:/var/log/slurm
      - singularity_cache:/mnt/singularity_cache
      - user_data:/INNUENDO
      - ./inputs/fastq:/INNUENDO/ftp/files
      - ./inputs/schemas:/INNUENDO/inputs/schemas
      - ./inputs/prodigal_training_files:/INNUENDO/inputs/prodigal_training_files
      - ./inputs/core_lists:/INNUENDO/inputs/core_lists
      - ./inputs/serotyping_files:/INNUENDO/inputs/serotyping_files
    expose:
      - "6818"
    depends_on:
      - "controller"

  # Service for the nginx web server. it requires mapping of the nginx conf
  # to be able to access all the other processes from the browser.
  web:
    image: nginx:latest
    restart: on-failure
    volumes:
      - ./configs/nginx/site.conf:/etc/nginx/conf.d/default.conf
      - static-content:/usr/src/app
      - ./configs/app/config_reports.js:/usr/src/app/config.js
      - /Users/bgoncalves/sandbox/repositories/report-nf/js/inits.js:/usr/src/app/js/inits.js
      - /Users/bgoncalves/sandbox/repositories/report-nf/js/reports.js:/usr/src/app/js/reports.js
      - /Users/bgoncalves/sandbox/repositories/report-nf/js/tables/process_chewbbaca.js:/usr/src/app/js/tables/process_chewbbaca.js
      - /Users/bgoncalves/sandbox/repositories/report-nf/js/tables/tables.js:/usr/src/app/js/tables/tables.js
    ports:
      - "80:80"
      - "10035:10035"


volumes:
  static-content:
  etc_munge:
  etc_slurm:
  slurm_jobdir:
  var_lib_mysql:
  var_log_slurm:
  singularity_cache:
  user_data:

